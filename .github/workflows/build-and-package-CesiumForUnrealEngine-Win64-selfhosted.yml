name: Build and Package Cesium for Unreal for Windows

on:
  workflow_call:
    inputs:
      output-package-name:
        required: true
        type: string
        default: 'CesiumUnreal-2.7.1'
      relative-build-directory:
        description: 'Directory where the github repo will be checked out to and then built'
        type: string
        required: true
      relative-output-directory:
        description: 'Directory to save the output file'
        type: string
        required: true
      visual-studio-version:
        required: false
        type: string
        default: ''
      visual-studio-components:
        required: false
        type: string
        default: ''
      unreal-engine-version:
        required: true
        type: string
      unreal-batch-files-relative-directory:
        required: true
        type: string
      cmake-generator:
        required: true
        type: string
      cmake-platform:
        required: true
        type: string
      cmake-toolchain:
        required: true
        type: string
        default: "version=14.34.17.4"
  
jobs:
  build:
    timeout-minutes: 210
    runs-on: [self-hosted, windows, x64]
    steps:
      - name: Install Visual Studio components
        if: ${{ inputs.visual-studio-version && inputs.visual-studio-components }}
        run: |
          $components = "${{ inputs.visual-studio-components }}" -split "," | foreach {"--add $_"}
          if ($components.Length -gt 0)
          {
            $componentcmd = $components -join " "
            Start-Process "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" -ArgumentList "modify --installPath ""C:\Program Files\Microsoft Visual Studio\${{ inputs.visual-studio-version }}\Enterprise"" --quiet $componentcmd" -Wait -PassThru
          }

      - name: Install nasm
        uses: ilammy/setup-nasm@v1.5.1

      - name: Build cesium-native
        run: |
        
          echo "Toolchain Option: ${{ inputs.cmake-toolchain }}"

          cd ${{ inputs.relative-build-directory }}/extern
          cmake -B build -S . -A "${{ inputs.cmake-platform }}" -G "${{ inputs.cmake-generator }}" -T "${{ inputs.cmake-toolchain }}"
          cmake --build build --config Release --target install -j16
          # cd ..
          # Remove-Item -Recurse -Force "extern"
          
      - name: Overwrite plugin engine version
        run: |
          ((Get-Content -path ${{ inputs.relative-build-directory }}/CesiumForUnreal.uplugin -Raw) -replace '"EngineVersion": ".*?"','"EngineVersion": "${{ inputs.unreal-engine-version }}"') | Set-Content -Path ${{ inputs.relative-build-directory }}/CesiumForUnreal.uplugin
          
      - name: Customize BuildConfiguration.xml
        run: |
          echo "User Profile: $env:USERPROFILE"
    
          if (-not (Test-Path -Path "$env:USERPROFILE\AppData\Roaming\Unreal Engine\UnrealBuildTool")) {
            mkdir "$env:USERPROFILE\AppData\Roaming\Unreal Engine\UnrealBuildTool"
          }
    
          $xmlContent = @'
          <?xml version="1.0" encoding="utf-8" ?>
          <Configuration xmlns="https://www.unrealengine.com/BuildConfiguration">
            <BuildConfiguration>
              <MaxParallelActions>8</MaxParallelActions>
            </BuildConfiguration>
            <SourceFileWorkingSet><Provider>None</Provider></SourceFileWorkingSet>
          </Configuration>
          '@
    
          Set-Content -Path "$env:USERPROFILE\AppData\Roaming\Unreal Engine\UnrealBuildTool\BuildConfiguration.xml" -Value $xmlContent
            
      - name: Package CesiumForUnreal plugin
        run: |
          ./${{ inputs.unreal-batch-files-relative-directory }}/RunUAT.bat BuildPlugin -Plugin="${{ github.workspace }}/${{ inputs.relative-build-directory }}/CesiumForUnreal.uplugin" -Package="${{ github.workspace }}/${{ inputs.relative-output-directory }}/cesium-windows" -CreateSubFolder -TargetPlatforms=Win64
          echo LastExitCode=$LASTEXITCODE
          if ($LASTEXITCODE -eq 0) {
            exit 0
          }
          else {
            cat "C:\Users\runneradmin\AppData\Roaming\Unreal Engine\AutomationTool\Logs\C+Program+Files+Epic+Games+UE_5.3\UBT-UnrealEditor-Win64-Development.txt"
            exit -1
          }